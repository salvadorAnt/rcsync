#!/bin/bash
# rcsync
#
# Install:
#
# sudo apt install rclone curl
# git clone https://github.com/uGeek/rcsync.git ~/rcsync
#
# sudo ln -s /home/angel/rcsync/rcsync /usr/bin/rcsync
# sudo chmod +x /usr/bin/rcsync
#
# sudo apt install inotify-tools
# sudo apt install notify-osd     ## ubuntu
# sudo apt install libnotify-bin  ## debian
#




VERSION=0.5



if [ "$2" != "" ]
then
echo "source ~/.config/rcsync/$2" >  ~/.config/rcsync/source
fi


source  ~/.config/rcsync/source


if [ "$1" = "mount" ]
then

    while read LINEA;
    do
    echo "Montando $LINEA"
    nohup rclone mount $LINEA --vfs-cache-mode full -v --allow-other 2>/dev/null &
    done <<< $(cat ~/.config/rcsync/$2 | grep MOUNT | sed s'|MOUNT=||'g | sed s'|\"||'g)

exit
fi


if [ "$1" = "push" ]
then
echo "Subiendo archivos al servidor ..."
rclone sync $LOCAL $SERVIDOR  --filter-from $FILES  -v
exit
fi



if [ "$1" = "pull" ]
then
echo "Descargando archivos desde el servidor ..."
rclone sync $SERVIDOR $LOCAL --filter-from $FILES  -v 
exit
fi

if [ "$1" = "local" ]
then
rcsync pull
inotifywait -e modify  -mrq "$FOLDER_1" "$FOLDER_2" "$FOLDER_3" "$FOLDER_4" "$FOLDER_5" "$FOLDER_6" "$FOLDER_7" "$FOLDER_8" "$FOLDER_9" "$FOLDER_10" | while read line; do
XDG_RUNTIME_DIR=/run/user/$(id -u) notify-send -u critical -t 2000 -c  "rcsync" "subiendo archivos al servidor"
rcsync push
done
exit
fi



if [ "$1" = "server" ]
then

while :
do

CAMBIO=$(rclone check $SERVIDOR  $LOCAL --filter-from $FILES -v --download 2>&1 | grep "Failed")

if [ "$CAMBIO" != "" ]
then
XDG_RUNTIME_DIR=/run/user/$(id -u) notify-send -u critical -t 2000 -c  "rcsync" "Descargando archivos del servidor"
rcsync pull
fi
sleep 60
done
exit
fi

if [ "$1" = "sync" ]
then
    rcsync local  $2 &
    rcsync server $2 &
exit
fi

if [ "$1" = "config" ]
then
echo "
---------------------------------------------------------------------------------
Última nube configurada:
---------------------------------------------------------------------------------
Servidor:          $SERVIDOR
Directorio Local:  $LOCAL
Archivo de config: $FILES

Directorios locales monitorizados para sincronizar:
---------------------------------------------------
- $FOLDER_1
- $FOLDER_2
- $FOLDER_3
- $FOLDER_4
- $FOLDER_5
- $FOLDER_6
- $FOLDER_7
- $FOLDER_8
- $FOLDER_9
- $FOLDER_10
"

exit
fi



if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "h" ] || [ "$1" = "" ]
   then
echo "
---------------------------------------------------------------------------------
rcsync     [opción]      Descripción
---------------------------------------------------------------------------------
rcsync   push    nube   >>>  push hacia el servidor
rcsync   pull    nube   >>>  pull. del servidor a local
rcsync   local   nube   >>>  Sincronizar hacia al servidor, siempre que haya cambios
rcsync   server  nube   >>>  Sincronizar del servidor a local
rcsync   sync    nube   >>>  Sincronización con la nube bidireccional
rcsync   config         >>>  Ver confiruración de última nube utilizada

rcsync   mount   nube   >>>  Montar directorios añadidos en el archivo de configuración

  Ejemplo: Mi nube se llama webdav
    - Sincronizar a la nube todo lo que hago en mi escritorio: rcsync local webdav
    - Sincronización Bidireccional:                            rcsync sync  webdav 
    - Montar directorios configurados en el archivo config:    rcsync mount webdav

  Ejemplo: Mis dotfiles estan en la nube dot
    - Subir al servidor los cambios de dotfiles en mi PC:      rcsync push dot
    - Descargar los dotfiles de mi servidor al PC:             rcsync pull dot

version $VERSION
"
exit
fi

