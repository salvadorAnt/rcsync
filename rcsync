#!/bin/bash
# rcsync
#
# Install:
#
# sudo apt install rclone curl
# git clone https://github.com/uGeek/rcsync.git ~/rcsync
#
# sudo ln -s /home/angel/rcsync/rcsync /usr/bin/rcsync
# sudo chmod +x /usr/bin/rcsync
#
# sudo apt install inotify-tools
# sudo apt install notify-osd     ## ubuntu
# sudo apt install libnotify-bin  ## debian
# sudo apt install dialog

VERSION=0.9.3

if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "h" ] || [ "$1" = "" ]
then
    echo "
---------------------------------------------------------------------------------
rcsync     [opción]      Descripción
---------------------------------------------------------------------------------
rcsync   push    nube   >>>  push hacia el servidor
rcsync   pull    nube   >>>  pull. del servidor a local
rcsync   local   nube   >>>  Sincronizar hacia al servidor, siempre que haya cambios
rcsync   server  nube   >>>  Sincronizar del servidor a local
rcsync   sync    nube   >>>  Sincronización con la nube bidireccional
rcsync   sync    nube memory  >> Montar en el directorio local la RAM y simcronización con la nube bidireccional
rcsync   push/pull/local/server/sync  nube c  >>>  Archivo de configuración de rclone cifrado

rcsync   config         >>>  Ver confiruración de última nube utilizada
rcsync   lsconfig       >>>  Listar archivos de configuracion disponibles   
rcsync   e       nube   >>>  Configurar archivo de configuración y directorios a sincronizar

rcsync   mount   nube   >>>  Montar directorios añadidos en el archivo de configuración

rcsync   U              >>> Instalar y actualizar últimos paquetes para ubuntu.
rcsync   install termux >>> Instalar en termux

  Ejemplo: Mi nube se llama webdav
    - Sincronizar a la nube todo lo que hago en mi escritorio: rcsync local webdav
    - Sincronización Bidireccional:                            rcsync sync  webdav 
    - Montar directorios configurados en el archivo config:    rcsync mount webdav

  Ejemplo: Mis dotfiles estan en la nube dot
    - Subir al servidor los cambios de dotfiles en mi PC:      rcsync push dot
    - Descargar los dotfiles de mi servidor al PC:             rcsync pull dot

version $VERSION
"
    exit
fi


if [ "$1" = "U" ]
then
    sudo apt install curl notify-osd dialog  inotify-tools -y
    curl https://rclone.org/install.sh | sudo bash
exit
fi


if [ -f ~/.config/rcsync/editor ];
then
    source ~/.config/rcsync/editor
else
    mkdir -p ~/.config/rcsync/
    echo -en "¿Que editor de texto quieres utilizar para configurar rcsync?: " ; read edit
    echo "EDITOR='$edit'" >  ~/.config/rcsync/editor
    source ~/.config/rcsync/editor
fi


if [ "$1" = "install" ] || [ "$2" = "termux" ]
then
    mkdir -p $HOME/.local/bin
    echo "alias rcsync='bash ~/.local/bin/rcsync'" >> $HOME/.bashrc
    curl -L https://raw.githubusercontent.com/uGeek/rcsync/main/rcsync -o $HOME/.local/bin/rcsync && chmod +x $HOME/.local/bin/rcsync
    mkdir -p $HOME/.config/rcsync/
    curl -L https://raw.githubusercontent.com/uGeek/rcsync/main/.config/rcsync/termux      -o $HOME/.config/termux
    curl -L https://raw.githubusercontent.com/uGeek/rcsync/main/.config/rcsync/termux.sync -o $HOME/.config/termux.sync
    ### Termux
    pkg upgrade
    pkg install inotify-tools termux-api termux-services rclone -y
    termux-setup-storage
    clear
    exit
fi



if [ "$1" = "e" ]
then
    $EDITOR ~/.config/rcsync/$2  ;  $EDITOR ~/.config/rcsync/$2.sync
    exit
fi


if [ "$1" = "lsconfig" ]
then
    echo ""
    echo "Archivos de configuracion"
    echo "-------------------------"
    ls -1 --ignore="source"  --ignore="*~" --ignore="editor"  ~/.config/rcsync
    echo ""
    exit
fi



if [ "$2" != "" ]
then
    echo "source ~/.config/rcsync/$2" >  ~/.config/rcsync/source
fi



if [ -f ~/.config/rcsync/"$(echo $(cat ~/.config/rcsync/source | sed 's|source ~/.config/rcsync/||g'))" ]
then
    echo ""
else
    echo "No existe ese archivo de configuración"
    exit
fi


source  ~/.config/rcsync/source


if [ "$3" = "c" ]
then
    RCLONE_CONFIG_PASS=$(whiptail --passwordbox "rcsync. Introduce tu contraseña" 8 78 --title "password dialog" 3>&1 1>&2 2>&3)
    export RCLONE_CONFIG_PASS
fi


if [ "$1" = "mount" ]
then

    while read LINEA;
    do
	echo "Montando $LINEA"
	nohup rclone mount $LINEA --vfs-cache-mode full -v --allow-other 2>/dev/null &
	    done <<< $(cat ~/.config/rcsync/$2 | grep MOUNT | sed s'|MOUNT=||'g | sed s'|\"||'g)

exit
fi

if [ "$1" = "push" ]
then
echo "Subiendo archivos al servidor ..."
rclone sync $LOCAL $SERVIDOR  --filter-from $FILES  --config=$CONFIG -v
exit
fi


if [ "$1" = "pull" ]
then
echo "Descargando archivos desde el servidor ..."
rclone sync $SERVIDOR $LOCAL --filter-from $FILES --config=$CONFIG -v 
exit
fi


if [ "$1" = "local" ]
then
rcsync pull 
inotifywait -e modify  -mrq "$FOLDER_1" "$FOLDER_2" "$FOLDER_3" "$FOLDER_4" "$FOLDER_5" "$FOLDER_6" "$FOLDER_7" "$FOLDER_8" "$FOLDER_9" "$FOLDER_10" | while read line; do
XDG_RUNTIME_DIR=/run/user/$(id -u) notify-send -u critical -t 2000 -c  "rcsync" "subiendo archivos al servidor"
rcsync push 
done
exit
fi


if [ "$1" = "server" ]
then

while :
do

CAMBIO=$(rclone check $SERVIDOR  $LOCAL --filter-from $FILES --config=$CONFIG -v --download 2>&1 | grep "Failed")

if [ "$CAMBIO" != "" ]
then
XDG_RUNTIME_DIR=/run/user/$(id -u) notify-send -u critical -t 2000 -c  "rcsync" "Descargando archivos del servidor"
rcsync pull 
fi
sleep 60
done
exit
fi

if [ "$1" = "sync" ]
then
    if [ "$3" = "memory" ]
    then
    rclone mount :memory: "$(echo $LOCAL | cut -d":" -f2-)" &
fi
    rcsync local  $2 &
    rcsync server $2 &
exit
fi

if [ "$1" = "config" ]
then
echo "
---------------------------------------------------------------------------------
Última nube configurada:
---------------------------------------------------------------------------------
Servidor:                         $SERVIDOR
Directorio Local:                 $LOCAL
Archivo de config:                $FILES
Archivo de configuración:         $CONFIG
Editor para editar configuración: $EDITOR

Directorios locales monitorizados para sincronizar:
---------------------------------------------------
- $FOLDER_1
- $FOLDER_2
- $FOLDER_3
- $FOLDER_4
- $FOLDER_5
- $FOLDER_6
- $FOLDER_7
- $FOLDER_8
- $FOLDER_9
- $FOLDER_10
"

echo "---------------------------------------"
echo " Archivos y directorios a sincronizar  "
echo "---------------------------------------"
echo ""
echo ""

cat ~/.config/rcsync/"$(echo $(cat ~/.config/rcsync/source | sed 's|source ~/.config/rcsync/||g'))".sync
echo ""

exit
fi
